#include "defines.h"
using namespace std;
using namespace G;
    

AutoRunning=1;
//RampR.startRotateTo(-180,rotationUnits::deg);
//RampL.rotateTo(-180,rotationUnits::deg);
BRAKE(RampL,coast);
BRAKE(RampR,coast); 
//wait(300);
intake=on;
Move(20,32,1,brake,10000); //4 cubes
StopDrive(brake);
RampR.resetRotation();
RampL.resetRotation();
//wait(500);
Turn(-60,20,10000);
wait(200);
Move(20,6.5,1,brake,10000);
wait(200);
Turn(60,20,10000);
wait(200);
DontLiftStack=on;
Move(20,9,1,brake,10000);
wait(200);
DontLiftStack=on;
intake=off;
Move(20,-6,1,brake,10000);
ArmL.setVelocity(70,vex::velocityUnits::pct);
ArmR.setVelocity(70,vex::velocityUnits::pct);
ArmR.startRotateTo(380,rotationUnits::deg);
ArmL.rotateTo(380,rotationUnits::deg);
Move(20,5,1,coast,10000);
ManualSpeed=-70;
intake=manual;
Move(20,2,0,brake,10000);
Move(20,-15,0,brake,10000);
ArmR.startRotateTo(0,rotationUnits::deg);
ArmL.rotateTo(0,rotationUnits::deg);
intake=on;
DontLiftStack=off;
Turn(45,20,10000);

StopDrive(brake); 
wait(500);
Move(40,-22.5,1,brake,10000);
wait(500);
Turn(-45,20,10000);
StopDrive(brake); 
wait(500);
intake=on;
Move(15,15,1,brake,10000);
wait(100);
Move(15,-2,1,brake,10000);
ArmR.startRotateTo(90,vex::rotationUnits::deg);
ArmL.rotateTo(90,vex::rotationUnits::deg);
wait(500);
Move(15,7.5,1,brake,10000);
intake=off;
Move(40,-8,1,brake,10000);
ArmR.startRotateTo(40,vex::rotationUnits::deg);
ArmL.rotateTo(40,vex::rotationUnits::deg);
ArmR.startRotateTo(-2,vex::rotationUnits::deg);
ArmL.startRotateTo(-2,vex::rotationUnits::deg);
wait(400);
intake=on;
wait(700);
DontLiftStack=on;
Move(15,10,1,brake,10000);
wait(500);
intake=off;
Turn(135,25,10000);
StopDrive(brake); 
wait(300);
if(CubeSense2.pressing()==1){DontDropStack=on;}
Move(40,48,1,brake,10000);
ramp=fwrd;
RunRamp=on;
while(RunRamp==on){wait(20);}
Move(40,-2,1,coast,10000);
ArmR.startRotateTo(90,rotationUnits::deg);
ramp=bwrd;
RunRamp=on;
Move(35,-15,1,brake,10000);
ArmR.startRotateTo(0,rotationUnits::deg);
while(1){wait(100);}